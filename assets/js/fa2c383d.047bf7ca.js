"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7334],{3905:function(t,e,a){a.d(e,{Zo:function(){return k},kt:function(){return N}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var m=n.createContext({}),p=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},k=function(t){var e=p(t.components);return n.createElement(m.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,k=d(t,["components","mdxType","originalType","parentName"]),u=p(a),N=r,s=u["".concat(m,".").concat(N)]||u[N]||o[N]||l;return a?n.createElement(s,i(i({ref:e},k),{},{components:a})):n.createElement(s,i({ref:e},k))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var d={};for(var m in e)hasOwnProperty.call(e,m)&&(d[m]=e[m]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},86319:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return i},default:function(){return o},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var n=a(83117),r=(a(67294),a(3905));const l={sidebar_label:"Tech description",sidebar_position:2},i="Tech description",d={unversionedId:"programs/fixed-price-sale/tech-description",id:"programs/fixed-price-sale/tech-description",title:"Tech description",description:"Creators to sell something have to do next:",source:"@site/docs/01-programs/07-fixed-price-sale/02-tech-description.md",sourceDirName:"01-programs/07-fixed-price-sale",slug:"/programs/fixed-price-sale/tech-description",permalink:"/programs/fixed-price-sale/tech-description",draft:!1,editUrl:"https://github.com/metaplex/docs/tree/main/docs/01-programs/07-fixed-price-sale/02-tech-description.md",tags:[],version:"current",lastUpdatedAt:1686920795,formattedLastUpdatedAt:"Jun 16, 2023",sidebarPosition:2,frontMatter:{sidebar_label:"Tech description",sidebar_position:2},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/programs/fixed-price-sale/introduction"},next:{title:"NFT Packs",permalink:"/programs/nft-packs/"}},m={},p=[{value:"Creators to sell something have to do next:",id:"creators-to-sell-something-have-to-do-next",level:2},{value:"Users to buy tokens have to do next:",id:"users-to-buy-tokens-have-to-do-next",level:2},{value:"Store",id:"store",level:2},{value:"Selling resource",id:"selling-resource",level:2},{value:"Market",id:"market",level:2},{value:"TradeHistory",id:"tradehistory",level:2},{value:"PDA \u201chistory\u201c, wallet.key(), market.key()",id:"pda-history-walletkey-marketkey",level:3},{value:"PrimaryMetadataCreators",id:"primarymetadatacreators",level:2},{value:"PDA \u201cprimary_creators\u201c, metadata.key()",id:"pda-primary_creators-metadatakey",level:3},{value:"CreateStore",id:"createstore",level:2},{value:"InitSellingResource",id:"initsellingresource",level:2},{value:"CreateMarket",id:"createmarket",level:2},{value:"ChangeMarket",id:"changemarket",level:2},{value:"Buy",id:"buy",level:2},{value:"SuspendMarket",id:"suspendmarket",level:2},{value:"ResumeMarket",id:"resumemarket",level:2},{value:"CloseMarket",id:"closemarket",level:2},{value:"Withdraw",id:"withdraw",level:2},{value:"ClaimResource",id:"claimresource",level:2},{value:"SavePrimaryMetadataCreators",id:"saveprimarymetadatacreators",level:2}],k={toc:p};function o(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tech-description"},"Tech description"),(0,r.kt)("h2",{id:"creators-to-sell-something-have-to-do-next"},"Creators to sell something have to do next:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create store"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It's necessary because we have to filter Markets somehow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It will contain name, admin key, description")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Initialise Selling resource. It can be either created one or our platform will create it."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Once user initialise selling resource we have an object with resource which we can sell"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a Market"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Create object with info about items selling, all apart from max supply such as we defined it in Selling resource")))),(0,r.kt)("h2",{id:"users-to-buy-tokens-have-to-do-next"},"Users to buy tokens have to do next:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to store. Also in future we could create some page with all the stores where users can choose what they want to buy")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Choose token and click "Buy"'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Under the hood next things will happen:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"TradeHistory account will be created where we track how many tokens this user already bought")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Debit and credit operations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New NFT created(create mint, mint token, create Metadata, create MasterEdition)")))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Token will be shown in their wallets"))),(0,r.kt)("h1",{id:"accounts"},"Accounts"),(0,r.kt)("h2",{id:"store"},"Store"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"admin"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Admin key who can create selling resources and markets in specific store")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"selling-resource"},"Selling resource"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"owner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Owner of resource. This account can receive back resource once sail is ended")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Mint account Metadata attached to. We don\u2019t need store Metadata key because it\u2019s PDA and we can calculate it knowing the mint key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Token account which holds MasterEdition")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault_owner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"PDA with seeds ","[\u201cmt_vault\u201c, resource.key(), store.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"supply"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of tokens already sold")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max_supply"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null},"Max amount of token can be sold")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"state"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Enum{Uninitialised, Created, InUse, Exhausted, Stoped,}")),(0,r.kt)("td",{parentName:"tr",align:null},"State of resource")))),(0,r.kt)("h2",{id:"market"},"Market"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_mint"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Mint account of tokens which market will accept as a payment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_holder"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Token account buyers will send tokens to. Only market owner can withdraw assets")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_owner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"PDA","[\u201cholder\u201c, treasury_mint.key(), selling_resource.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"owner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Market owner")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mutable"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"price"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pieces_in_one_wallet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null},"How many tokens we can sell to one wallet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start_date"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"end_date"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"state"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Enum {Uninitialised, Created, Active, Ended,}")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"funds_collected"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"tradehistory"},"TradeHistory"),(0,r.kt)("h3",{id:"pda-history-walletkey-marketkey"},"PDA ","[\u201chistory\u201c, wallet.key(), market.key()]"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"wallet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubkey")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"already_bought"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null},"How many tokens user already bought from specific Market")))),(0,r.kt)("h2",{id:"primarymetadatacreators"},"PrimaryMetadataCreators"),(0,r.kt)("h3",{id:"pda-primary_creators-metadatakey"},"PDA ","[\u201cprimary_creators\u201c, metadata.key()]"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"creators"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Vec<mpl_token_metadata::state::Creator>")),(0,r.kt)("td",{parentName:"tr",align:null},"List of creators to receive primary sales royalties")))),(0,r.kt)("h1",{id:"instructions"},"Instructions"),(0,r.kt)("h2",{id:"createstore"},"CreateStore"),(0,r.kt)("p",null,"Creates new Store account."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"admin"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Uninitialized account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"initsellingresource"},"InitSellingResource"),(0,r.kt)("p",null,"Initialize SellingResource account which will be used by Market."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store_admin"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Holds resource_token and pays for selling_resource account creating")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Uninitialized account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Key which can withdraw MasterEdition once sale is ended")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource_mint"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Mint account Metadata attached to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"master_edition"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA with seeds ","[\u201cmetadata\u201d, tokenMetadataProgramID, resource_mint, \u201cedition\u201d]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Master edition\u2019s metadata")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Token account to hold resource")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA ","[\u201cmt_vault\u201c, resource_mint.key(), store.key()]"),(0,r.kt)("td",{parentName:"tr",align:null},"Owner of vault token account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource_token"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"User\u2019s token account which holds token from resource_mint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max_supply"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null},"Max amount of tokens to sell")))),(0,r.kt)("h2",{id:"createmarket"},"CreateMarket"),(0,r.kt)("p",null,"Initialize Market account. Set state to Created, it means that owner can change some data before it will be activated, off course if Market marked as mutable."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"If user want sell art for native SOL as ",(0,r.kt)("inlineCode",{parentName:"p"},"treasury_mint")," should be set ",(0,r.kt)("inlineCode",{parentName:"p"},"11111111111111111111111111111111")," also treasury_holder and treasury_owner should be the same accounts PDA. It\u2019s necessary for security reasons so only program will be able to spend that SOL.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Uninitialized account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"store"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_mint"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Mint of assets which we will take as a payment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_holder"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Token account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA ","[\u201cholder\u201c, treasury_mint.key(), selling_resource.key()]"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mutable"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"price"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pieces_in_one_wallet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start_date"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u64")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"end_date"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gating_config"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<GatingConfig{collection: Pubkey, expire_on_use: bool, gating_time: Option<u64>}>")),(0,r.kt)("td",{parentName:"tr",align:null},"Gating token. If this value set only users with NFT from pointed collection can buy new NFTs from market.")))),(0,r.kt)("h2",{id:"changemarket"},"ChangeMarket"),(0,r.kt)("p",null,"Available only if Market::mutable == true. Can change: name, description, mutable, price, pieces_in_one_wallet."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<String>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_description"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<String>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mutable"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<bool>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_price"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_pieces_in_one_wallet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Option<u64>")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"buy"},"Buy"),(0,r.kt)("p",null,"User can call only if current date > Market::start_date."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"If user buy art for native SOL user_token_acc and user_wallet accounts should be the same.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user_token_acc"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Token account to pay for the member token. Mint of this token acc should be == treasury_mint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user_wallet"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"trade_history"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Account to track how many NFTs user already bought")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_holder"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_metadata_acc"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_edition_acc"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"master_edition_acc"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"new_mint"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"edition_marker"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA, seeds can be found in token-metadata program")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA ","[\u201cmt_vault\u201c, resource.key(), store.key()]"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"master_edition_metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Below accounts are optional and should be passed only if gating feature is enabled \u2193"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user_collection_token_account"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"User\u2019s token account from collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"token_account_mint"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Token\u2019s mint account")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata_account"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata account for the mint mentioned above")))),(0,r.kt)("h2",{id:"suspendmarket"},"SuspendMarket"),(0,r.kt)("p",null,"Suspend Market so nobody can buy items and market owner can change data. Instruction should be available only if Market::mutable == true because in other case there is no reason to suspend it."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clock"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"resumemarket"},"ResumeMarket"),(0,r.kt)("p",null,"Instruction to resume the market after it was suspended. Can be called only if market is in suspended state."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clock"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"closemarket"},"CloseMarket"),(0,r.kt)("p",null,"This instruction can be called only if Market was created with unlimited duration."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clock"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"withdraw"},"Withdraw"),(0,r.kt)("p",null,"Called by Market owner to withdraw collected treasury funds. Available only if Market::state == Ended."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_holder"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Market::treasury_holder. Token account which holds all the tokens received from users during selling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_mint"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"funder"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payer"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payout_ticket"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA","[\u201cpayout_ticket\u201c, market.key(), funder.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA","[\u201cholder\u201c, treasury_mint.key(), selling_resource.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destination"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Token account transfer tokens to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Below account is optional and should be passed only during primary sale \u2193"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"primary_metadata_creators_data"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"List of creators who should receive royalties from primary sale")))),(0,r.kt)("h2",{id:"claimresource"},"ClaimResource"),(0,r.kt)("p",null,"Called by Resource owner. Available only if SellingResource::state == Exhausted of Market::state == Ended."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"treasury_holder"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selling_resource_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"SellingResource::vault. Token account which holds master edition")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata for token which was sold")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vault_owner"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA with seeds ","[\u201cmt_vault\u201c, resource.key(), store.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"secondary_metadata_creators"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destination"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Token account transfer master edition to")))),(0,r.kt)("h2",{id:"saveprimarymetadatacreators"},"SavePrimaryMetadataCreators"),(0,r.kt)("p",null,"Called before market is created. This list of creators will be used in withdraw instruction to distribute royalties. Take a note that if you are going to sell NFTs from master edition with ",(0,r.kt)("inlineCode",{parentName:"p"},"primary_sale_happen = true")," you don't need to call this instruction."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"admin"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Signer, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata\u2019s update authority")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"primary_metadata_creators"),(0,r.kt)("td",{parentName:"tr",align:null},"Key, Writable"),(0,r.kt)("td",{parentName:"tr",align:null},"PDA with seeds ","[\u201cprimary_creators\u201c, metadata.key()]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"system_program"),(0,r.kt)("td",{parentName:"tr",align:null},"Key"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"primary_metadata_creators"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"u8")),(0,r.kt)("td",{parentName:"tr",align:null},"primary_metadata_creators key bump")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"creators"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Vec<mpl_token_metadata::state::Creator>")),(0,r.kt)("td",{parentName:"tr",align:null},"List of creators who will receive primary royalties")))))}o.isMDXComponent=!0}}]);